name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  # 1) Build on Linux, macOS & Windows with cgo enabled
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        goos: [linux, darwin, windows]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    outputs:
      dist-name: dist-${{ matrix.goos }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.23'

      - name: Build snapshot (cgo enabled)
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean --snapshot --skip-publish
        env:
          CGO_ENABLED: '1'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.goos }}
          path: dist/

  # 2) After all builds finish, collect artifacts and publish a single GitHub Release
  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-linux
          path: dist/linux

      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-darwin
          path: dist/darwin

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-windows
          path: dist/windows

      - name: Consolidate dist/
        run: |
          mkdir -p dist-all
          cp -r dist/linux/* dist-all/
          cp -r dist/darwin/* dist-all/
          cp -r dist/windows/* dist-all/
          rm -rf dist
          mv dist-all dist

      - name: Publish GitHub Release
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean --skip-build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
